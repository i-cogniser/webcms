services:
  db:
    image: postgres:16
    container_name: webcms-db
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - webcms-network
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 20s
      timeout: 10s
      retries: 3

  flyway:
    image: flyway/flyway
    container_name: flyway-migrations
    command: -url=jdbc:postgresql://db:5432/${DB_NAME} -user=${DB_USER} -password=${DB_PASSWORD} -locations=filesystem:/flyway/sql migrate
    environment:
      - FLYWAY_SCHEMAS=public
    volumes:
      - ./db/migrations:/flyway/sql
    depends_on:
      db:
        condition: service_healthy
    networks:
      - webcms-network

  web:
    build:
      context: .
      dockerfile: backend.Dockerfile
    container_name: webcms-app
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully
    networks:
      - webcms-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/api/health || exit 1" ]
      interval: 20s
      timeout: 10s
      retries: 1

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    container_name: webcms-frontend
    ports:
      - "80:80"
    networks:
      - webcms-network
    depends_on:
      web:
        condition: service_healthy

volumes:
  postgres-data:

networks:
  webcms-network:
    driver: bridge
