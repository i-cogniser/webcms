name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Run tests
        run: go test -v ./...

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker Compose
        uses: docker/compose-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: ghcr.io/yourusername/webcms-app:latest

      - name: Run Docker Compose
        run: |
          docker-compose build
          docker-compose up -d
          sleep 10  # Give some time for services to start

      - name: Check API endpoints
        run: |
          curl -f http://localhost:8080/api/v1/check || exit 1

      - name: Run static files check
        run: |
          curl -f http://localhost:8080/static/ || exit 1

      - name: Tear down Docker containers
        run: docker-compose down

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker Compose
        uses: docker/compose-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/yourusername/webcms-app:latest

      - name: Deploy to production
        run: |
          docker-compose -f docker-compose.yml up -d
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          FRONTEND_PATH: ${{ secrets.FRONTEND_PATH }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
